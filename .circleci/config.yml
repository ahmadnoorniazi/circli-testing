# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
services:
  #mysql server
  mysql:
    container_name: mysql
    restart: on-failure:2
    image: circleci/mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_USER: 'root'
      MYSQL_PASS: 'root'
    volumes:
      - ./mounts/mysql:/var/lib/mysql
      - ./mounts/scripts:/scripts
    ports:
      - "3306:3306"

  #node express server
  nodeServer:
    container_name: node-server
    working_dir: /node/server
    restart: on-failure:2
    depends_on:
      - mysql
    image: circleci/node:8.9.0
    command: /node/createUser.sh
    volumes:
      - ../server:/node/server
      - ./mounts/scripts/createUser.sh:/node/createUser.sh:ro
    links:
      - mysql
    - save_cache:
      paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
  
  #reverse proxy
  nginx:
    container_name: nginx
    restart: on-failure:2
    depends_on:
      - nodeServer
    image: nginx:latest
    volumes:
      - ./mounts/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./mounts/nginx/cert.crt:/etc/nginx/cert.crt:ro
      - ./mounts/nginx/cert.key:/etc/nginx/cert.key:ro
    links:
      - nodeServer
    ports:
      - "80:80"
      - "443:443"
    # docker:
    #   # specify the version you desire here
    #   - image: circleci/node:8.9.0
      
    #   # Specify service dependencies here if necessary
    #   # CircleCI maintains a library of pre-built images
    #   # documented at https://circleci.com/docs/2.0/circleci-images/
    #   # - image: circleci/mongo:3.4.4
    # steps:
    #   - checkout

    #   # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v1-dependencies-{{ checksum "package.json" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v1-dependencies-

    #   - run: yarn install

    #   - save_cache:
    #       paths:
    #         - node_modules
    #       key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      # - run: yarn test

     -run: docker exec -it -u node node-server bash -c yarn && yarn test
